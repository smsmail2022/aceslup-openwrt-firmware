#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: kenzo
#=================================================

name: Lean K2P .config

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'true'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-21.02
  CONFIG_FILE: immortalwrt-k2p.config

  FEEDS_CONF: feeds.conf.default
  DIY_P1_SH: diy-part1-immortalwrt.sh
  DIY_P2_SH: diy-part2.sh

  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: Ubuntu-20.04

    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt -qq update -y
        sudo -E apt -qq full-upgrade -y
        sudo -E apt -qq install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
                                       bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
                                       git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
                                       libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
                                       mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils \
                                       rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo timedatectl set-timezone "$TZ"
         
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone -b $REPO_BRANCH --single-branch $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: 自定义安装源
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        cd openwrt
        sh -x $GITHUB_WORKSPACE/$DIY_P1_SH
      
    - name: 更新 & 安装 feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: 自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        cd openwrt
        sh -x $GITHUB_WORKSPACE/$DIY_P2_SH
 
    - name: SSH 连接 to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: 组织配置文件
      working-directory: ./openwrt
      run: |
        mkdir -p /tmp/upload
        cp .config /tmp/upload/$CONFIG_FILE

    - name: 上传配置文件
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.CONFIG_FILE }}
        path: /tmp/upload

#    - name: 删除工作流
#      uses: c-hive/gha-remove-artifacts@v1.2.0
#      with:
#        age: '1 day'
#        skip-recent: 5

#    - name: 删除旧的 workflow 运行记录
#      uses: GitRML/delete-workflow-runs@main
#      with:
#        retain_days: 30
